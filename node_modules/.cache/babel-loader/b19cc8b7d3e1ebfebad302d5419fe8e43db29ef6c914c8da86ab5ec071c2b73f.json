{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/emailValidation/emailValidation.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error d-flex align-items-center mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"13\",\n        height: \"13\",\n        fill: \"currentColor\",\n        className: \"bi bi-exclamation-circle me-1\",\n        viewBox: \"0 0 16 16\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }, this), meta.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this) : null]\n  }, void 0, true);\n};\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c = MyTextInput;\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\")\n});\nconst EmailValidator = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    validationSchema: LoginSchema,\n    onSubmit: () => {\n      setTimeout(() => {\n        alert(\"Thank you! Check your email for a 15% discount\");\n      }, 1000);\n    },\n    children: props => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        action: \"#\",\n        encType: \"text/plain\",\n        id: \"newsletterForm\",\n        name: \"newsletterForm\",\n        autoComplete: \"on\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          className: \"fs-6 text-center\",\n          children: \"Subscribe to our newsletter and receive a surprise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\",\n            id: \"floatingInputNewsletter\",\n            placeholder: \"name@example.com\",\n            pattern: \"[a-z0-9._%+\\\\-]+@[a-z0-9.\\\\-]+\\\\.[a-z]{2,}$\",\n            required: true,\n            className: `form-control rounded-0 border-0 ${props.touched.email && props.errors.email ? \"is-invalid\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"floatingInputNewsletter\",\n            id: \"floatingInputLabel\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"email\",\n            className: \"invalid-feedback position-absolute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submitButton\",\n          type: \"submit\",\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/arrow-right.svg\",\n            alt: \"Arrow right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c2 = EmailValidator;\nexport default EmailValidator;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"EmailValidator\");","map":{"version":3,"names":["Formik","Form","useField","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","MyTextInput","label","props","_s","field","meta","children","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","className","touched","error","xmlns","width","height","fill","viewBox","d","_c","LoginSchema","object","shape","email","string","required","EmailValidator","initialValues","validationSchema","onSubmit","setTimeout","alert","action","encType","autoComplete","noValidate","Field","type","placeholder","pattern","errors","for","ErrorMessage","component","src","alt","_c2","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/emailValidation/emailValidation.js"],"sourcesContent":["import { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\n\nconst MyTextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n      <>\n          <label htmlFor={props.id || props.name}>{label}</label>\n          <input className=\"text-input\" {...field} {...props} />\n          {meta.touched && meta.error ? (\n              <div className=\"error d-flex align-items-center mt-1\">\n\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" fill=\"currentColor\" className=\"bi bi-exclamation-circle me-1\" viewBox=\"0 0 16 16\">\n                      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\n                      <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\" />\n                  </svg>\n\n                  {meta.error}\n\n              </div>\n          ) : null}\n      </>\n  );\n};\n\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n});\n\nconst EmailValidator = () => {\n\n  return (\n\n    <Formik\n      initialValues={{\n        email: \"\",\n      }}\n\n      validationSchema={LoginSchema}\n\n      onSubmit={() => {\n\n        setTimeout(() => {\n          \n          alert(\"Thank you! Check your email for a 15% discount\");\n\n        }, 1000);\n\n      }}\n    >\n      {(props) => (\n        <fieldset>\n          <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n            autoComplete=\"on\" noValidate>\n            <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n            <div className=\"form-floating\">\n\n              <Field\n                type=\"email\"\n                name=\"email\"\n                id=\"floatingInputNewsletter\"\n                placeholder=\"name@example.com\"\n                pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\"\n                required\n                className={`form-control rounded-0 border-0 ${props\n                  .touched\n                  .email &&\n                  props\n                    .errors\n                    .email\n                  ? \"is-invalid\"\n                  : \"\"\n                  }`}\n\n              />\n\n              <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n              <ErrorMessage\n                component=\"div\"\n                name=\"email\"\n                className=\"invalid-feedback position-absolute\"\n              />\n            </div>\n\n            <button id=\"submitButton\" type=\"submit\" className=\"position-relative\">\n              <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n            </button>\n\n          </Form>\n\n        </fieldset>\n\n      )}\n    </Formik>\n\n  );\n}\n\nexport default EmailValidator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}