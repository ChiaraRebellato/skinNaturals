{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailValidator() {\n  const {\n    Formik\n  } = formik;\n  const schema = yup.object().shape({\n    floatingInputNewsletter: yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: schema,\n    onSubmit: console.log,\n    initialValues: {\n      floatingInputNewsletter: ''\n    },\n    children: ({\n      handleSubmit,\n      handleChange,\n      values,\n      touched,\n      errors\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      enctype: \"text/plain\",\n      id: \"newsletterForm\",\n      name: \"newsletterForm\",\n      autocomplete: \"on\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"form-floating\",\n        controlId: \"newsletter\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          class: \"form-control rounded-0 border-0\",\n          id: \"floatingInputNewsletter\",\n          name: \"floatingInputNewsletter\",\n          placeholder: \"name@example.com\",\n          pattern: \"[a-z0-9._%+\\\\-]+@[a-z0-9.\\\\-]+\\\\.[a-z]{2,}$\",\n          required: true,\n          value: values.floatingInputNewsletter,\n          onChange: handleChange,\n          isValid: touched.floatingInputNewsletter && !errors.floatingInputNewsletter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"submitButton\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"img/arrow-right.svg\",\n          alt: \"Arrow right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = EmailValidator;\nexport default EmailValidator;\nvar _c;\n$RefreshReg$(_c, \"EmailValidator\");","map":{"version":3,"names":["Button","Form","formik","yup","jsxDEV","_jsxDEV","EmailValidator","Formik","schema","object","shape","floatingInputNewsletter","string","required","validationSchema","onSubmit","console","log","initialValues","children","handleSubmit","handleChange","values","touched","errors","enctype","id","name","autocomplete","noValidate","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","class","placeholder","pattern","value","onChange","isValid","Feedback","src","alt","_c","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\n\nfunction EmailValidator() {\n  const { Formik } = formik;\n\n  const schema = yup.object().shape({\n    floatingInputNewsletter: yup.string().required()\n  });\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={console.log}\n      initialValues={{\n        floatingInputNewsletter: ''\n      }}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => (\n        <Form enctype=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autocomplete=\"on\" noValidate onSubmit={handleSubmit}>\n\n          <Form.Group className=\"form-floating\" controlId=\"newsletter\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              class=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\n              value={values.floatingInputNewsletter}\n              onChange={handleChange}\n              isValid={touched.floatingInputNewsletter && !errors.floatingInputNewsletter}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Button id=\"submitButton\"  type=\"submit\"><img src=\"img/arrow-right.svg\" alt=\"Arrow right\" /></Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default EmailValidator;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAChC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGL,MAAM;EAEzB,MAAMM,MAAM,GAAGL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAChCC,uBAAuB,EAAER,GAAG,CAACS,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;EACjD,CAAC,CAAC;EAEF,oBACER,OAAA,CAACE,MAAM;IACLO,gBAAgB,EAAEN,MAAO;IACzBO,QAAQ,EAAEC,OAAO,CAACC,GAAI;IACtBC,aAAa,EAAE;MACbP,uBAAuB,EAAE;IAC3B,CAAE;IAAAQ,QAAA,EAEDA,CAAC;MAAEC,YAAY;MAAEC,YAAY;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAO,CAAC,kBACvDnB,OAAA,CAACJ,IAAI;MAACwB,OAAO,EAAC,YAAY;MAACC,EAAE,EAAC,gBAAgB;MAACC,IAAI,EAAC,gBAAgB;MAClEC,YAAY,EAAC,IAAI;MAACC,UAAU;MAACd,QAAQ,EAAEK,YAAa;MAAAD,QAAA,gBAEpDd,OAAA,CAACJ,IAAI,CAAC6B,KAAK;QAACC,SAAS,EAAC,eAAe;QAACC,SAAS,EAAC,YAAY;QAAAb,QAAA,gBAC1Dd,OAAA,CAACJ,IAAI,CAACgC,KAAK;UAAAd,QAAA,EAAC;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACtChC,OAAA,CAACJ,IAAI,CAACqC,OAAO;UACXC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,iCAAiC;UAACd,EAAE,EAAC,yBAAyB;UACpEC,IAAI,EAAC,yBAAyB;UAACc,WAAW,EAAC,kBAAkB;UAC7DC,OAAO,EAAC,6CAA0C;UAAC7B,QAAQ;UAC3D8B,KAAK,EAAErB,MAAM,CAACX,uBAAwB;UACtCiC,QAAQ,EAAEvB,YAAa;UACvBwB,OAAO,EAAEtB,OAAO,CAACZ,uBAAuB,IAAI,CAACa,MAAM,CAACb;QAAwB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eACFhC,OAAA,CAACJ,IAAI,CAACqC,OAAO,CAACQ,QAAQ;UAAA3B,QAAA,EAAC;QAAW;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACbhC,OAAA,CAACL,MAAM;QAAC0B,EAAE,EAAC,cAAc;QAAEa,IAAI,EAAC,QAAQ;QAAApB,QAAA,eAACd,OAAA;UAAK0C,GAAG,EAAC,qBAAqB;UAACC,GAAG,EAAC;QAAa;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjG;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACY,EAAA,GArCQ3C,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}