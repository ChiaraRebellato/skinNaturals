{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet qty = 1;\nexport const shoppingCart = createSlice({\n  name: 'shoppingCart',\n  initialState: {\n    products: [],\n    total: 0\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const itemInCart = state.products.find(item => item.id == action.payload.id);\n      if (!itemInCart) {\n        state.products.push({\n          ...action.payload,\n          qty: 1\n        });\n        state.total += action.payload.price;\n      } else {\n        itemInCart.qty++;\n        state.total += action.payload.price;\n      }\n    },\n    updateQty: (state, action) => {\n      const {\n        id,\n        price,\n        qty\n      } = action.payload;\n      if (qty >= 10) {\n        alert(\"You can add max 10 items per order\");\n        document.getElementById(\"increase\").disable = true;\n        return;\n      } else {\n        const itemInCart = state.products.find(item => item.id == id);\n        itemInCart.qty++;\n        state.total += price;\n      }\n    },\n    decreaseQty: (state, action) => {\n      const {\n        id,\n        price,\n        qty\n      } = action.payload;\n      if (qty <= 1) {\n        return;\n      } else {\n        const itemInCart = state.products.find(item => item.id == id);\n        itemInCart.qty--;\n        state.total -= price;\n      }\n    },\n    removeItem: (state, action) => {\n      const {\n        id,\n        price,\n        qty\n      } = action.payload;\n      state.products = state.products.filter(item => item.id !== id);\n      state.total = state.total - price * qty;\n    }\n  }\n});\nexport const {\n  addToCart,\n  updateQty,\n  decreaseQty,\n  removeItem\n} = shoppingCart.actions;\nexport default shoppingCart.reducer;","map":{"version":3,"names":["createSlice","qty","shoppingCart","name","initialState","products","total","reducers","addToCart","state","action","itemInCart","find","item","id","payload","push","price","updateQty","alert","document","getElementById","disable","decreaseQty","removeItem","filter","actions","reducer"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/shoppingCartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nlet qty = 1;\n\nexport const shoppingCart = createSlice({\n    name: 'shoppingCart',\n    initialState: {\n        products: [],\n        total: 0\n    },\n    reducers: {\n        addToCart: (state, action) => {\n\n            const itemInCart = state.products.find((item) => item.id == action.payload.id);\n\n            if (!itemInCart) {\n                state.products.push({\n                    ...action.payload,\n                    qty: 1\n                });\n                state.total += action.payload.price\n            } else {\n                itemInCart.qty++;\n                state.total += action.payload.price;\n            }\n        },\n\n        updateQty: (state, action) => {\n            const { id, price, qty } = action.payload;\n\n            if (qty >= 10) {\n                alert(\"You can add max 10 items per order\");\n                document.getElementById(\"increase\").disable = true;\n                return;\n            }\n            else {\n\n                const itemInCart = state.products.find((item) => item.id == id);\n                itemInCart.qty++;\n                state.total += price;\n            }\n        },\n\n        decreaseQty: (state, action) => {\n            const { id, price, qty } = action.payload;\n\n            if (qty <= 1) {\n\n                return;\n    \n            } else {\n                const itemInCart = state.products.find((item) => item.id == id);\n                itemInCart.qty--;\n                state.total -= price;    \n            }\n\n        },\n\n        removeItem: (state, action) => {\n            const { id, price, qty } = action.payload;\n            state.products = state.products.filter((item) => item.id !== id);\n            state.total = state.total - (price * qty);\n\n        }\n\n    }\n});\n\nexport const { addToCart, updateQty, decreaseQty, removeItem } = shoppingCart.actions;\nexport default shoppingCart.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAIC,GAAG,GAAG,CAAC;AAEX,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAE1B,MAAMC,UAAU,GAAGF,KAAK,CAACJ,QAAQ,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAE9E,IAAI,CAACH,UAAU,EAAE;QACbF,KAAK,CAACJ,QAAQ,CAACW,IAAI,CAAC;UAChB,GAAGN,MAAM,CAACK,OAAO;UACjBd,GAAG,EAAE;QACT,CAAC,CAAC;QACFQ,KAAK,CAACH,KAAK,IAAII,MAAM,CAACK,OAAO,CAACE,KAAK;MACvC,CAAC,MAAM;QACHN,UAAU,CAACV,GAAG,EAAE;QAChBQ,KAAK,CAACH,KAAK,IAAII,MAAM,CAACK,OAAO,CAACE,KAAK;MACvC;IACJ,CAAC;IAEDC,SAAS,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAM;QAAEI,EAAE;QAAEG,KAAK;QAAEhB;MAAI,CAAC,GAAGS,MAAM,CAACK,OAAO;MAEzC,IAAId,GAAG,IAAI,EAAE,EAAE;QACXkB,KAAK,CAAC,oCAAoC,CAAC;QAC3CC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,OAAO,GAAG,IAAI;QAClD;MACJ,CAAC,MACI;QAED,MAAMX,UAAU,GAAGF,KAAK,CAACJ,QAAQ,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIA,EAAE,CAAC;QAC/DH,UAAU,CAACV,GAAG,EAAE;QAChBQ,KAAK,CAACH,KAAK,IAAIW,KAAK;MACxB;IACJ,CAAC;IAEDM,WAAW,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEI,EAAE;QAAEG,KAAK;QAAEhB;MAAI,CAAC,GAAGS,MAAM,CAACK,OAAO;MAEzC,IAAId,GAAG,IAAI,CAAC,EAAE;QAEV;MAEJ,CAAC,MAAM;QACH,MAAMU,UAAU,GAAGF,KAAK,CAACJ,QAAQ,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIA,EAAE,CAAC;QAC/DH,UAAU,CAACV,GAAG,EAAE;QAChBQ,KAAK,CAACH,KAAK,IAAIW,KAAK;MACxB;IAEJ,CAAC;IAEDO,UAAU,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEI,EAAE;QAAEG,KAAK;QAAEhB;MAAI,CAAC,GAAGS,MAAM,CAACK,OAAO;MACzCN,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACoB,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAChEL,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAIW,KAAK,GAAGhB,GAAI;IAE7C;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEO,SAAS;EAAEU,SAAS;EAAEK,WAAW;EAAEC;AAAW,CAAC,GAAGtB,YAAY,CAACwB,OAAO;AACrF,eAAexB,YAAY,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}