{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/emailValidation/emailValidation.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error d-flex align-items-center mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"13\",\n        height: \"13\",\n        fill: \"currentColor\",\n        className: \"bi bi-exclamation-circle me-1\",\n        viewBox: \"0 0 16 16\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), meta.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c = MyTextInput;\nconst EmailValidator = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: ''\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required')\n      }),\n      onSubmit: () => {\n        setTimeout(() => {\n          alert(\"Thank you! Check your email for a 15% discount\");\n        }, 1000);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          action: \"#\",\n          encType: \"text/plain\",\n          id: \"newsletterForm\",\n          name: \"newsletterForm\",\n          autoComplete: \"on\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"fs-6 text-center\",\n            children: \"Subscribe to our newsletter and receive a surprise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n              className: \"form-control rounded-0 border-0 border-bottom\",\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"name@example.com\",\n              pattern: \"[a-z0-9._%+\\\\-]+@[a-z0-9.\\\\-]+\\\\.[a-z]{2,}$\",\n              required: true,\n              autofocus: true,\n              autocomplete: \"email\",\n              \"aria-required\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"email\",\n              children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submitButton\",\n            type: \"submit\",\n            className: \"position-relative\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/img/arrow-right.svg\",\n              alt: \"Arrow right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = EmailValidator;\nexport default EmailValidator;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"EmailValidator\");","map":{"version":3,"names":["Formik","Form","useField","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","MyTextInput","label","props","_s","field","meta","children","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","className","touched","error","xmlns","width","height","fill","viewBox","d","_c","EmailValidator","initialValues","email","validationSchema","object","string","required","onSubmit","setTimeout","alert","action","encType","autoComplete","noValidate","type","placeholder","pattern","autofocus","autocomplete","for","src","alt","_c2","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/emailValidation/emailValidation.js"],"sourcesContent":["import { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\n\nconst MyTextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error d-flex align-items-center mt-1\">\n\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" fill=\"currentColor\" className=\"bi bi-exclamation-circle me-1\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\n            <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\" />\n          </svg>\n\n          {meta.error}\n\n        </div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst EmailValidator = () => {\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email('Invalid email address')\n            .required('Required')\n        })}\n        onSubmit={() => {\n          setTimeout(() => {\n            alert(\"Thank you! Check your email for a 15% discount\");\n\n          }, 1000);\n\n        }}\n      >\n        <fieldset>\n\n          <Form \n          action='#' \n          encType=\"text/plain\" \n          id=\"newsletterForm\" \n          name=\"newsletterForm\"\n          autoComplete=\"on\" \n          noValidate>\n\n            <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n            <div className=\"form-floating mb-4\">\n              <MyTextInput className=\"form-control rounded-0 border-0 border-bottom\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"name@example.com\"\n                pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\"\n                required\n                autofocus\n                autocomplete=\"email\"\n                aria-required=\"true\"\n              />\n              <label for=\"email\">Email address<sup>*</sup></label>\n\n            </div>\n\n            <button id=\"submitButton\" type=\"submit\" className=\"position-relative\">\n              <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n            </button>\n\n          </Form>\n        </fieldset>\n      </Formik>\n    </>\n  );\n};\n\n\nexport default EmailValidator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}