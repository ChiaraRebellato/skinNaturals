{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js\";\nimport React from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n  password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\")\n});\nconst EmailValidator = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: \"\",\n            password: \"\"\n          },\n          validationSchema: LoginSchema,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            console.log(values);\n            // Simulating asynchronous operation, like an API call\n            setTimeout(() => {\n              alert(\"Form is validated! Submitting the form...\");\n              setSubmitting(false);\n            }, 1000);\n          },\n          children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-5\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 text-center\",\n                children: !props.isSubmitting ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Login Page\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"email\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 53,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"email\",\n                        name: \"email\",\n                        placeholder: \"Enter email\",\n                        autoComplete: \"off\",\n                        className: `mt-2 form-control ${props.touched.email && props.errors.email ? \"is-invalid\" : \"\"}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 56,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        component: \"div\",\n                        name: \"email\",\n                        className: \"invalid-feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 71,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"password\",\n                        className: \"mt-3\",\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"password\",\n                        name: \"password\",\n                        placeholder: \"Enter password\",\n                        className: `form-control ${props.touched.password && props.errors.password ? \"is-invalid\" : \"\"}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        component: \"div\",\n                        name: \"password\",\n                        className: \"invalid-feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary btn-block mt-4\",\n                      disabled: props.isSubmitting,\n                      children: props.isSubmitting ? \"Submitting...\" : \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Home Page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = EmailValidator;\nexport default EmailValidator;\n\n/*\n\n    <fieldset>\n      <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n      <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n        autoComplete=\"on\" noValidate >\n\n        <div className=\"form-floating\">\n\n          <Field type=\"email\" className=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n            name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n            pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required />\n          <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n          <ErrorMessage name=\"floatingInputNewsletter\" component=\"div\" className='mt-2 position-absolute' />\n      {}\n        </div>\n\n        <button id=\"submitButton\" type=\"submit\" disabled={isSubmitting}>\n          <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n        </button>\n\n      </Form>\n\n    </fieldset>\n\n\n        <Form enctype=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autocomplete=\"on\" noValidate onSubmit={handleSubmit}>\n\n          <Form.Group className=\"form-floating\" controlId=\"newsletter\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              class=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\n              value={values.floatingInputNewsletter}\n              onChange={handleChange}\n              isValid={touched.floatingInputNewsletter && !errors.floatingInputNewsletter}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Button id=\"submitButton\" type=\"submit\"><img src=\"img/arrow-right.svg\" alt=\"Arrow right\" /></Button>\n        </Form>\n\n*/\nvar _c;\n$RefreshReg$(_c, \"EmailValidator\");","map":{"version":3,"names":["React","Formik","Field","ErrorMessage","Form","Yup","jsxDEV","_jsxDEV","LoginSchema","object","shape","email","string","required","password","min","EmailValidator","className","children","initialValues","validationSchema","onSubmit","values","setSubmitting","console","log","setTimeout","alert","props","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","placeholder","autoComplete","touched","errors","component","disabled","_c","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js"],"sourcesContent":["\nimport React from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(3, \"Password must be 3 characters at minimum\")\n    .required(\"Password is required\"),\n});\n\nconst EmailValidator = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n            }}\n            validationSchema={LoginSchema}\n            onSubmit={(\n              values,\n              { setSubmitting }\n            ) => {\n              console.log(values);\n              // Simulating asynchronous operation, like an API call\n              setTimeout(() => {\n                alert(\n                  \"Form is validated! Submitting the form...\"\n                );\n                setSubmitting(false);\n              }, 1000);\n            }}\n          >\n            {(props) => (\n              <div>\n                <div className=\"row mb-5\">\n                  <div className=\"col-lg-12 text-center\">\n                    {!props.isSubmitting ? (\n                      <div>\n                        <h1>\n                          Login\n                          Page\n                        </h1>{\" \"}\n                        <Form>\n                          <div className=\"form-group\">\n                            <label htmlFor=\"email\">\n                              Email\n                            </label>\n                            <Field\n                              type=\"email\"\n                              name=\"email\"\n                              placeholder=\"Enter email\"\n                              autoComplete=\"off\"\n                              className={`mt-2 form-control ${props\n                                .touched\n                                .email &&\n                                props\n                                  .errors\n                                  .email\n                                ? \"is-invalid\"\n                                : \"\"\n                                }`}\n                            />\n                            <ErrorMessage\n                              component=\"div\"\n                              name=\"email\"\n                              className=\"invalid-feedback\"\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <label\n                              htmlFor=\"password\"\n                              className=\"mt-3\"\n                            >\n                              Password\n                            </label>\n                            <Field\n                              type=\"password\"\n                              name=\"password\"\n                              placeholder=\"Enter password\"\n                              className={`form-control ${props\n                                .touched\n                                .password &&\n                                props\n                                  .errors\n                                  .password\n                                ? \"is-invalid\"\n                                : \"\"\n                                }`}\n                            />\n                            <ErrorMessage\n                              component=\"div\"\n                              name=\"password\"\n                              className=\"invalid-feedback\"\n                            />\n                          </div>\n\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block mt-4\"\n                            disabled={\n                              props.isSubmitting\n                            }\n                          >\n                            {props.isSubmitting\n                              ? \"Submitting...\"\n                              : \"Submit\"}\n                          </button>\n                        </Form>\n                      </div>\n                    ) : (\n                      <h1>\n                        Home\n                        Page\n                      </h1>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EmailValidator;\n\n\n/*\n\n    <fieldset>\n      <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n      <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n        autoComplete=\"on\" noValidate >\n\n        <div className=\"form-floating\">\n\n          <Field type=\"email\" className=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n            name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n            pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required />\n          <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n          <ErrorMessage name=\"floatingInputNewsletter\" component=\"div\" className='mt-2 position-absolute' />\n      {}\n        </div>\n\n        <button id=\"submitButton\" type=\"submit\" disabled={isSubmitting}>\n          <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n        </button>\n\n      </Form>\n\n    </fieldset>\n\n\n        <Form enctype=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autocomplete=\"on\" noValidate onSubmit={handleSubmit}>\n\n          <Form.Group className=\"form-floating\" controlId=\"newsletter\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              class=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\n              value={values.floatingInputNewsletter}\n              onChange={handleChange}\n              isValid={touched.floatingInputNewsletter && !errors.floatingInputNewsletter}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Button id=\"submitButton\" type=\"submit\"><img src=\"img/arrow-right.svg\" alt=\"Arrow right\" /></Button>\n        </Form>\n\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}