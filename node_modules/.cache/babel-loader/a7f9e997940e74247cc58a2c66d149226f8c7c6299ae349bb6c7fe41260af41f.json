{"ast":null,"code":"import{Formik,Form,useField}from'formik';import*as Yup from'yup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const MyTextInput=_ref=>{let{label,...props}=_ref;// useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n// which we can spread on <input>. We can use field meta to show an error\n// message if the field is invalid and it has been touched (i.e. visited)\nconst[field,meta]=useField(props);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:props.id||props.name,children:label}),/*#__PURE__*/_jsx(\"input\",{className:\"text-input\",...field,...props}),meta.touched&&meta.error?/*#__PURE__*/_jsxs(\"div\",{className:\"error d-flex align-items-center mt-2 position-absolute\",children:[/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"13\",height:\"13\",fill:\"currentColor\",className:\"bi bi-exclamation-circle me-1\",viewBox:\"0 0 16 16\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\"})]}),meta.error]}):null]});};const EmailValidator=()=>{return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{email:''},validationSchema:Yup.object({email:Yup.string().email('Invalid email address').required('Required')}),onSubmit:()=>{setTimeout(()=>{alert(\"Thank you! Check your email for a 15% discount\");},1000);},children:/*#__PURE__*/_jsx(\"fieldset\",{children:/*#__PURE__*/_jsxs(Form,{action:\"#\",encType:\"text/plain\",id:\"newsletterForm\",name:\"newsletterForm\",autoComplete:\"on\",noValidate:true,children:[/*#__PURE__*/_jsx(\"legend\",{className:\"fs-6 text-center\",children:\"Subscribe to our newsletter and receive a surprise\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating mb-4\",children:[/*#__PURE__*/_jsx(MyTextInput,{className:\"form-control rounded-0 border-0 border-bottom border-white bg-transparent\",name:\"email\",type:\"email\",placeholder:\"name@example.com\",pattern:\"[a-z0-9._%+\\\\-]+@[a-z0-9.\\\\-]+\\\\.[a-z]{2,}$\",required:true,autoComplete:\"email\",\"aria-required\":\"true\"}),/*#__PURE__*/_jsxs(\"label\",{for:\"email\",className:\"bg-transparent\",children:[\"Email address\",/*#__PURE__*/_jsx(\"sup\",{children:\"*\"})]})]}),/*#__PURE__*/_jsx(\"button\",{id:\"submitButton\",type:\"submit\",className:\"position-relative\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/img/arrow-right.svg\",alt:\"Arrow right\"})})]})})})});};export default EmailValidator;","map":{"version":3,"names":["Formik","Form","useField","Yup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MyTextInput","_ref","label","props","field","meta","children","htmlFor","id","name","className","touched","error","xmlns","width","height","fill","viewBox","d","EmailValidator","initialValues","email","validationSchema","object","string","required","onSubmit","setTimeout","alert","action","encType","autoComplete","noValidate","type","placeholder","pattern","for","src","alt"],"sources":["/Users/chiararebellato/Desktop/Corsi/CodeAcademy/Progetti/react/skinnaturals/src/features/emailValidation/emailValidation.js"],"sourcesContent":["import { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\n\nconst MyTextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error d-flex align-items-center mt-2 position-absolute\">\n\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" fill=\"currentColor\" className=\"bi bi-exclamation-circle me-1\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\n            <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\" />\n          </svg>\n\n          {meta.error}\n\n        </div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst EmailValidator = () => {\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email('Invalid email address')\n            .required('Required')\n        })}\n        onSubmit={() => {\n          setTimeout(() => {\n            alert(\"Thank you! Check your email for a 15% discount\");\n\n          }, 1000);\n\n        }}\n      >\n        <fieldset>\n\n          <Form \n          action='#' \n          encType=\"text/plain\" \n          id=\"newsletterForm\" \n          name=\"newsletterForm\"\n          autoComplete=\"on\" \n          noValidate>\n\n            <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n            <div className=\"form-floating mb-4\">\n              <MyTextInput \n                className=\"form-control rounded-0 border-0 border-bottom border-white bg-transparent\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"name@example.com\"\n                pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\"\n                required\n                autoComplete=\"email\"\n                aria-required=\"true\"\n              />\n              <label for=\"email\" className='bg-transparent'>Email address<sup>*</sup></label>\n\n            </div>\n\n            <button id=\"submitButton\" type=\"submit\" className=\"position-relative\">\n              <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n            </button>\n\n          </Form>\n        </fieldset>\n      </Formik>\n    </>\n  );\n};\n\n\nexport default EmailValidator;\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,IAAI,CAAEC,QAAQ,KAAQ,QAAQ,CAC/C,MAAO,GAAK,CAAAC,GAAG,KAAM,KAAK,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE3B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,KAAK,CAAE,GAAGC,KAAM,CAAC,CAAAF,IAAA,CACtC;AACA;AACA;AACA,KAAM,CAACG,KAAK,CAAEC,IAAI,CAAC,CAAGb,QAAQ,CAACW,KAAK,CAAC,CACrC,mBACEN,KAAA,CAAAE,SAAA,EAAAO,QAAA,eACEX,IAAA,UAAOY,OAAO,CAAEJ,KAAK,CAACK,EAAE,EAAIL,KAAK,CAACM,IAAK,CAAAH,QAAA,CAAEJ,KAAK,CAAQ,CAAC,cACvDP,IAAA,UAAOe,SAAS,CAAC,YAAY,IAAKN,KAAK,IAAMD,KAAK,CAAG,CAAC,CACrDE,IAAI,CAACM,OAAO,EAAIN,IAAI,CAACO,KAAK,cACzBf,KAAA,QAAKa,SAAS,CAAC,wDAAwD,CAAAJ,QAAA,eAErET,KAAA,QAAKgB,KAAK,CAAC,4BAA4B,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,IAAI,CAAC,cAAc,CAACN,SAAS,CAAC,+BAA+B,CAACO,OAAO,CAAC,WAAW,CAAAX,QAAA,eAC9IX,IAAA,SAAMuB,CAAC,CAAC,qEAAqE,CAAE,CAAC,cAChFvB,IAAA,SAAMuB,CAAC,CAAC,uGAAuG,CAAE,CAAC,EAC/G,CAAC,CAELb,IAAI,CAACO,KAAK,EAER,CAAC,CACJ,IAAI,EACR,CAAC,CAEP,CAAC,CAGD,KAAM,CAAAO,cAAc,CAAGA,CAAA,GAAM,CAE3B,mBACExB,IAAA,CAAAI,SAAA,EAAAO,QAAA,cACEX,IAAA,CAACL,MAAM,EACL8B,aAAa,CAAE,CACbC,KAAK,CAAE,EACT,CAAE,CACFC,gBAAgB,CAAE7B,GAAG,CAAC8B,MAAM,CAAC,CAC3BF,KAAK,CAAE5B,GAAG,CAAC+B,MAAM,CAAC,CAAC,CAChBH,KAAK,CAAC,uBAAuB,CAAC,CAC9BI,QAAQ,CAAC,UAAU,CACxB,CAAC,CAAE,CACHC,QAAQ,CAAEA,CAAA,GAAM,CACdC,UAAU,CAAC,IAAM,CACfC,KAAK,CAAC,gDAAgD,CAAC,CAEzD,CAAC,CAAE,IAAI,CAAC,CAEV,CAAE,CAAAtB,QAAA,cAEFX,IAAA,aAAAW,QAAA,cAEET,KAAA,CAACN,IAAI,EACLsC,MAAM,CAAC,GAAG,CACVC,OAAO,CAAC,YAAY,CACpBtB,EAAE,CAAC,gBAAgB,CACnBC,IAAI,CAAC,gBAAgB,CACrBsB,YAAY,CAAC,IAAI,CACjBC,UAAU,MAAA1B,QAAA,eAERX,IAAA,WAAQe,SAAS,CAAC,kBAAkB,CAAAJ,QAAA,CAAC,oDAAkD,CAAQ,CAAC,cAEhGT,KAAA,QAAKa,SAAS,CAAC,oBAAoB,CAAAJ,QAAA,eACjCX,IAAA,CAACK,WAAW,EACVU,SAAS,CAAC,2EAA2E,CACrFD,IAAI,CAAC,OAAO,CACZwB,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,kBAAkB,CAC9BC,OAAO,CAAC,6CAA0C,CAClDV,QAAQ,MACRM,YAAY,CAAC,OAAO,CACpB,gBAAc,MAAM,CACrB,CAAC,cACFlC,KAAA,UAAOuC,GAAG,CAAC,OAAO,CAAC1B,SAAS,CAAC,gBAAgB,CAAAJ,QAAA,EAAC,eAAa,cAAAX,IAAA,QAAAW,QAAA,CAAK,GAAC,CAAK,CAAC,EAAO,CAAC,EAE5E,CAAC,cAENX,IAAA,WAAQa,EAAE,CAAC,cAAc,CAACyB,IAAI,CAAC,QAAQ,CAACvB,SAAS,CAAC,mBAAmB,CAAAJ,QAAA,cACnEX,IAAA,QAAK0C,GAAG,CAAC,sBAAsB,CAACC,GAAG,CAAC,aAAa,CAAE,CAAC,CAC9C,CAAC,EAEL,CAAC,CACC,CAAC,CACL,CAAC,CACT,CAAC,CAEP,CAAC,CAGD,cAAe,CAAAnB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}