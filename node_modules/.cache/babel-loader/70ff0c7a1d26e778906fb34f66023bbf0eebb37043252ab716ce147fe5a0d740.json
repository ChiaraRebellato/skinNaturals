{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js\";\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailValidator() {\n  const {\n    Formik\n  } = formik;\n  const schema = yup.object().shape({\n    firstName: yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: schema,\n    initialValues: {\n      firstName: 'Mark'\n    },\n    children: ({\n      handleSubmit,\n      handleChange,\n      values,\n      touched,\n      errors\n    }) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationFormik01\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"firstName\",\n            value: values.firstName,\n            onChange: handleChange,\n            isValid: touched.firstName && !errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = EmailValidator;\nexport default EmailValidator;\n\n/*\n\n    <fieldset>\n      <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n      <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n        autoComplete=\"on\" noValidate >\n\n        <div className=\"form-floating\">\n\n          <Field type=\"email\" className=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n            name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n            pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required />\n          <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n          <ErrorMessage name=\"floatingInputNewsletter\" component=\"div\" className='mt-2 position-absolute' />\n      {}\n        </div>\n\n        <button id=\"submitButton\" type=\"submit\" disabled={isSubmitting}>\n          <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n        </button>\n\n      </Form>\n\n    </fieldset>\n\n\n        <Form enctype=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autocomplete=\"on\" noValidate onSubmit={handleSubmit}>\n\n          <Form.Group className=\"form-floating\" controlId=\"newsletter\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              class=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\n              value={values.floatingInputNewsletter}\n              onChange={handleChange}\n              isValid={touched.floatingInputNewsletter && !errors.floatingInputNewsletter}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Button id=\"submitButton\" type=\"submit\"><img src=\"img/arrow-right.svg\" alt=\"Arrow right\" /></Button>\n        </Form>\n\n*/\nvar _c;\n$RefreshReg$(_c, \"EmailValidator\");","map":{"version":3,"names":["Button","Col","Form","InputGroup","Row","formik","yup","jsxDEV","_jsxDEV","EmailValidator","Formik","schema","object","shape","firstName","string","required","validationSchema","initialValues","children","handleSubmit","handleChange","values","touched","errors","noValidate","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","name","value","onChange","isValid","Feedback","_c","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\n\nfunction EmailValidator() {\n  const { Formik } = formik;\n\n  const schema = yup.object().shape({\n    firstName: yup.string().required()\n  });\n\n  return (\n    <Formik\n      validationSchema={schema}\n      initialValues={{\n        firstName: 'Mark'\n      }}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => (\n        <fieldset>\n          <Form noValidate onSubmit={handleSubmit}>\n\n            <Form.Group controlId=\"validationFormik01\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"firstName\"\n                value={values.firstName}\n                onChange={handleChange}\n                isValid={touched.firstName && !errors.firstName}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n          </Form>\n        </fieldset>\n      )}\n    </Formik>\n  );\n}\n\nexport default EmailValidator;\n\n\n/*\n\n    <fieldset>\n      <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n      <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n        autoComplete=\"on\" noValidate >\n\n        <div className=\"form-floating\">\n\n          <Field type=\"email\" className=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n            name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n            pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required />\n          <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n          <ErrorMessage name=\"floatingInputNewsletter\" component=\"div\" className='mt-2 position-absolute' />\n      {}\n        </div>\n\n        <button id=\"submitButton\" type=\"submit\" disabled={isSubmitting}>\n          <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n        </button>\n\n      </Form>\n\n    </fieldset>\n\n\n        <Form enctype=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autocomplete=\"on\" noValidate onSubmit={handleSubmit}>\n\n          <Form.Group className=\"form-floating\" controlId=\"newsletter\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              class=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\n              value={values.floatingInputNewsletter}\n              onChange={handleChange}\n              isValid={touched.floatingInputNewsletter && !errors.floatingInputNewsletter}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Button id=\"submitButton\" type=\"submit\"><img src=\"img/arrow-right.svg\" alt=\"Arrow right\" /></Button>\n        </Form>\n\n*/"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAChC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGL,MAAM;EAEzB,MAAMM,MAAM,GAAGL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAChCC,SAAS,EAAER,GAAG,CAACS,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;EACnC,CAAC,CAAC;EAEF,oBACER,OAAA,CAACE,MAAM;IACLO,gBAAgB,EAAEN,MAAO;IACzBO,aAAa,EAAE;MACbJ,SAAS,EAAE;IACb,CAAE;IAAAK,QAAA,EAEDA,CAAC;MAAEC,YAAY;MAAEC,YAAY;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAO,CAAC,kBACvDhB,OAAA;MAAAW,QAAA,eACEX,OAAA,CAACN,IAAI;QAACuB,UAAU;QAACC,QAAQ,EAAEN,YAAa;QAAAD,QAAA,eAEtCX,OAAA,CAACN,IAAI,CAACyB,KAAK;UAACC,SAAS,EAAC,oBAAoB;UAAAT,QAAA,gBACxCX,OAAA,CAACN,IAAI,CAAC2B,KAAK;YAAAV,QAAA,EAAC;UAAU;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACnCzB,OAAA,CAACN,IAAI,CAACgC,OAAO;YACXC,IAAI,EAAC,MAAM;YACXC,IAAI,EAAC,WAAW;YAChBC,KAAK,EAAEf,MAAM,CAACR,SAAU;YACxBwB,QAAQ,EAAEjB,YAAa;YACvBkB,OAAO,EAAEhB,OAAO,CAACT,SAAS,IAAI,CAACU,MAAM,CAACV;UAAU;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACFzB,OAAA,CAACN,IAAI,CAACgC,OAAO,CAACM,QAAQ;YAAArB,QAAA,EAAC;UAAW;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACQ,EAAA,GAlCQhC,cAAc;AAoCvB,eAAeA,cAAc;;AAG7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}