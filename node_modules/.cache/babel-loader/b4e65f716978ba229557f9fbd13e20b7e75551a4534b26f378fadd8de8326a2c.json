{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/Corsi/CodeAcademy/Progetti/react/skinnaturals/src/features/contactForm/contactForm.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport './contactForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error d-flex align-items-center mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"13\",\n        height: \"13\",\n        fill: \"currentColor\",\n        className: \"bi bi-exclamation-circle me-1\",\n        viewBox: \"0 0 16 16\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), meta.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c = MyTextInput;\nconst MyTextArea = ({\n  label,\n  ...props\n}) => {\n  _s2();\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"text-area\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error d-flex align-items-center mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"13\",\n        height: \"13\",\n        fill: \"currentColor\",\n        className: \"bi bi-exclamation-circle me-1\",\n        viewBox: \"0 0 16 16\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), meta.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n_s2(MyTextArea, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c2 = MyTextArea;\nconst MyCheckbox = ({\n  children,\n  ...props\n}) => {\n  _s3();\n  // React treats radios and checkbox inputs differently from other input types: select and textarea.\n  // Formik does this too! When you specify `type` to useField(), it will\n  // return the correct bag of props htmlFor you -- a `checked` prop will be included\n  // in `field` alongside `name`, `value`, `onChange`, and `onBlur`\n  const [field, meta] = useField({\n    ...props,\n    type: 'checkbox'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"checkbox-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error d-flex align-items-center mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"13\",\n        height: \"13\",\n        fill: \"currentColor\",\n        className: \"bi bi-exclamation-circle me-1\",\n        viewBox: \"0 0 16 16\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), meta.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s3(MyCheckbox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c3 = MyCheckbox;\nconst ContactForm = () => {\n  _s4();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        email: '',\n        acceptedTerms: false // added htmlFor our checkbox\n      },\n      validationSchema: Yup.object({\n        firstName: Yup.string().min(2, 'Too Short!').max(15, 'Must be 15 characters or less').required('Required').matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed htmlFor this field \"),\n        email: Yup.string().email('Invalid email address').required('Required'),\n        acceptedTerms: Yup.boolean().required('Required').oneOf([true], 'You must accept the terms and conditions.'),\n        msg: Yup.string().required('Required')\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          setSubmitting(false);\n          navigate(\"/redirect\", {\n            state: {\n              isSent: true\n            }\n          });\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          className: \"fs-5 fw-bold text-center\",\n          children: \"Leave a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          method: \"post\",\n          id: \"messageForm\",\n          name: \"messageForm\",\n          autoComplete: \"on\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"form-name\",\n            value: \"messageForm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mt-5 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n              className: \"form-control rounded-0 border-0 border-bottom\",\n              name: \"firstName\",\n              type: \"text\",\n              pattern: \"^[a-zA-Z]+\",\n              required: true,\n              autoFocus: true,\n              autoComplete: \"given-name\",\n              \"aria-required\": \"true\",\n              placeholder: \"Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: [\"Name\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n              className: \"form-control rounded-0 border-0 border-bottom\",\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"name@example.com\",\n              pattern: \"[a-z0-9._%+\\\\-]+@[a-z0-9.\\\\-]+\\\\.[a-z]{2,}$\",\n              required: true,\n              autoComplete: \"email\",\n              \"aria-required\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(MyTextArea, {\n              className: \"form-control rounded-0 h-100 border-0 border-bottom\",\n              name: \"msg\",\n              cols: \"5\",\n              rows: \"2\",\n              placeholder: \"Your Message\",\n              required: true,\n              \"aria-required\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"msg\",\n              children: [\"Message\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MyCheckbox, {\n            name: \"acceptedTerms\",\n            className: \"m-1\",\n            children: \"I accept the terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn border rounded-0 w-100 mt-3 mb-3\",\n            value: \"SEND\",\n            tabIndex: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s4(ContactForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c4 = ContactForm;\nexport default ContactForm;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"MyTextArea\");\n$RefreshReg$(_c3, \"MyCheckbox\");\n$RefreshReg$(_c4, \"ContactForm\");","map":{"version":3,"names":["Formik","Form","useField","Yup","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","MyTextInput","label","props","_s","field","meta","children","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","className","touched","error","xmlns","width","height","fill","viewBox","d","_c","MyTextArea","_s2","_c2","MyCheckbox","_s3","type","_c3","ContactForm","_s4","navigate","initialValues","firstName","email","acceptedTerms","validationSchema","object","string","min","max","required","matches","boolean","oneOf","msg","onSubmit","values","setSubmitting","setTimeout","state","isSent","method","autoComplete","noValidate","value","pattern","autoFocus","placeholder","cols","rows","tabIndex","_c4","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/Corsi/CodeAcademy/Progetti/react/skinnaturals/src/features/contactForm/contactForm.js"],"sourcesContent":["import { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport './contactForm.css'\n\nconst MyTextInput = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input>. We can use field meta to show an error\n    // message if the field is invalid and it has been touched (i.e. visited)\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <input className=\"text-input\" {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error d-flex align-items-center mt-1\">\n\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" fill=\"currentColor\" className=\"bi bi-exclamation-circle me-1\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\n                        <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\" />\n                    </svg>\n\n                    {meta.error}\n\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nconst MyTextArea = ({ label, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <textarea className=\"text-area\" {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error d-flex align-items-center mt-1\">\n\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" fill=\"currentColor\" className=\"bi bi-exclamation-circle me-1\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\n                        <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\" />\n                    </svg>\n\n                    {meta.error}\n\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n    // React treats radios and checkbox inputs differently from other input types: select and textarea.\n    // Formik does this too! When you specify `type` to useField(), it will\n    // return the correct bag of props htmlFor you -- a `checked` prop will be included\n    // in `field` alongside `name`, `value`, `onChange`, and `onBlur`\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\n    return (\n        <div>\n            <label className=\"checkbox-input\">\n                <input type=\"checkbox\" {...field} {...props} />\n                {children}\n            </label>\n            {meta.touched && meta.error ? (\n                <div className=\"error d-flex align-items-center mt-1\">\n\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" fill=\"currentColor\" className=\"bi bi-exclamation-circle me-1\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\" />\n                        <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\" />\n                    </svg>\n\n                    {meta.error}\n\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\n\nconst ContactForm = () => {\n\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    email: '',\n                    acceptedTerms: false, // added htmlFor our checkbox\n                }}\n                validationSchema={Yup.object({\n                    firstName: Yup.string()\n                        .min(2, 'Too Short!')\n                        .max(15, 'Must be 15 characters or less')\n                        .required('Required')\n                        .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed htmlFor this field \"),\n                    email: Yup.string()\n                        .email('Invalid email address')\n                        .required('Required'),\n                    acceptedTerms: Yup.boolean()\n                        .required('Required')\n                        .oneOf([true], 'You must accept the terms and conditions.'),\n                    msg: Yup.string()\n                        .required('Required')\n                })}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                        setSubmitting(false);\n                        navigate(\"/redirect\", {\n                            state: {\n                                isSent: true\n                            }\n                        }\n                        );\n                    }, 400);\n\n                }}\n            >\n                <fieldset>\n                    <legend className=\"fs-5 fw-bold text-center\">Leave a message</legend>\n\n                    <Form method='post' id=\"messageForm\" name=\"messageForm\" autoComplete=\"on\" noValidate>\n\n                    <input type=\"hidden\" name=\"form-name\" value=\"messageForm\" />\n\n                        <div className=\"form-floating mt-5 mb-4\">\n                            <MyTextInput className=\"form-control rounded-0 border-0 border-bottom\"\n                                name=\"firstName\"\n                                type=\"text\"\n                                pattern=\"^[a-zA-Z]+\"\n                                required\n                                autoFocus\n                                autoComplete=\"given-name\"\n                                aria-required=\"true\"\n                                placeholder=\"Your Name\"\n                            />\n                            <label htmlFor=\"name\">Name<sup>*</sup></label>\n\n                        </div>\n\n                        <div className=\"form-floating mb-4\">\n                            <MyTextInput className=\"form-control rounded-0 border-0 border-bottom\"\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"name@example.com\"\n                                pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\"\n                                required\n                                autoComplete=\"email\"\n                                aria-required=\"true\"\n                            />\n                            <label htmlFor=\"email\">Email address<sup>*</sup></label>\n\n                        </div>\n\n                        <div className=\"form-floating mb-4\">\n                            <MyTextArea\n                                className=\"form-control rounded-0 h-100 border-0 border-bottom\"\n                                name=\"msg\"\n                                cols=\"5\"\n                                rows=\"2\"\n                                placeholder=\"Your Message\"\n                                required\n                                aria-required=\"true\"\n                            ></MyTextArea>\n                            <label htmlFor=\"msg\">Message<sup>*</sup></label>\n\n                        </div>\n\n                        <MyCheckbox name=\"acceptedTerms\" className='m-1'>\n                            I accept the terms and conditions\n                        </MyCheckbox>\n\n                        <input\n                            type=\"submit\"\n                            className=\"btn border rounded-0 w-100 mt-3 mb-3\"\n                            value=\"SEND\"\n                            tabIndex={0}\n                        />\n\n                    </Form>\n                </fieldset>\n            </Formik>\n        </>\n    );\n};\n\nexport default ContactForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}