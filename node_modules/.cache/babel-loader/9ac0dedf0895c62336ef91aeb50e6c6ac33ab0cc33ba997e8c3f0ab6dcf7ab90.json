{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js\";\nimport React from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n  password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\")\n});\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: \"\",\n              password: \"\"\n            },\n            validationSchema: LoginSchema,\n            onSubmit: (values, {\n              setSubmitting\n            }) => {\n              console.log(values);\n              // Simulating asynchronous operation, like an API call\n              setTimeout(() => {\n                alert(\"Form is validated! Submitting the form...\");\n                setSubmitting(false);\n              }, 1000);\n            },\n            children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-lg-12 text-center\",\n                  children: !props.isSubmitting ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Login Page\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 27\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"email\",\n                          children: \"Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 54,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          type: \"email\",\n                          name: \"email\",\n                          placeholder: \"Enter email\",\n                          autoComplete: \"off\",\n                          className: `mt-2 form-control ${props.touched.email && props.errors.email ? \"is-invalid\" : \"\"}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 57,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          component: \"div\",\n                          name: \"email\",\n                          className: \"invalid-feedback\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 72,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 53,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"password\",\n                          className: \"mt-3\",\n                          children: \"Password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 80,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          type: \"password\",\n                          name: \"password\",\n                          placeholder: \"Enter password\",\n                          className: `form-control ${props.touched.password && props.errors.password ? \"is-invalid\" : \"\"}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 86,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          component: \"div\",\n                          name: \"password\",\n                          className: \"invalid-feedback\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 100,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-primary btn-block mt-4\",\n                        disabled: props.isSubmitting,\n                        children: props.isSubmitting ? \"Submitting...\" : \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Home Page\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default EmailValidator;\n\n/*\n\n    <fieldset>\n      <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n      <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n        autoComplete=\"on\" noValidate >\n\n        <div className=\"form-floating\">\n\n          <Field type=\"email\" className=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n            name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n            pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required />\n          <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n          <ErrorMessage name=\"floatingInputNewsletter\" component=\"div\" className='mt-2 position-absolute' />\n      {}\n        </div>\n\n        <button id=\"submitButton\" type=\"submit\" disabled={isSubmitting}>\n          <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n        </button>\n\n      </Form>\n\n    </fieldset>\n\n\n        <Form enctype=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autocomplete=\"on\" noValidate onSubmit={handleSubmit}>\n\n          <Form.Group className=\"form-floating\" controlId=\"newsletter\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              class=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\n              value={values.floatingInputNewsletter}\n              onChange={handleChange}\n              isValid={touched.floatingInputNewsletter && !errors.floatingInputNewsletter}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Button id=\"submitButton\" type=\"submit\"><img src=\"img/arrow-right.svg\" alt=\"Arrow right\" /></Button>\n        </Form>\n\n*/","map":{"version":3,"names":["React","Formik","Field","ErrorMessage","Form","Yup","jsxDEV","_jsxDEV","LoginSchema","object","shape","email","string","required","password","min","App","Component","render","className","children","initialValues","validationSchema","onSubmit","values","setSubmitting","console","log","setTimeout","alert","props","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","placeholder","autoComplete","touched","errors","component","disabled","EmailValidator"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js"],"sourcesContent":["\nimport React from \"react\";\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(3, \"Password must be 3 characters at minimum\")\n    .required(\"Password is required\"),\n});\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <Formik\n              initialValues={{\n                email: \"\",\n                password: \"\",\n              }}\n              validationSchema={LoginSchema}\n              onSubmit={(\n                values,\n                { setSubmitting }\n              ) => {\n                console.log(values);\n                // Simulating asynchronous operation, like an API call\n                setTimeout(() => {\n                  alert(\n                    \"Form is validated! Submitting the form...\"\n                  );\n                  setSubmitting(false);\n                }, 1000);\n              }}\n            >\n              {(props) => (\n                <div>\n                  <div className=\"row mb-5\">\n                    <div className=\"col-lg-12 text-center\">\n                      {!props.isSubmitting ? (\n                        <div>\n                          <h1>\n                            Login\n                            Page\n                          </h1>{\" \"}\n                          <Form>\n                            <div className=\"form-group\">\n                              <label htmlFor=\"email\">\n                                Email\n                              </label>\n                              <Field\n                                type=\"email\"\n                                name=\"email\"\n                                placeholder=\"Enter email\"\n                                autoComplete=\"off\"\n                                className={`mt-2 form-control ${props\n                                    .touched\n                                    .email &&\n                                    props\n                                      .errors\n                                      .email\n                                    ? \"is-invalid\"\n                                    : \"\"\n                                  }`}\n                              />\n                              <ErrorMessage\n                                component=\"div\"\n                                name=\"email\"\n                                className=\"invalid-feedback\"\n                              />\n                            </div>\n\n                            <div className=\"form-group\">\n                              <label\n                                htmlFor=\"password\"\n                                className=\"mt-3\"\n                              >\n                                Password\n                              </label>\n                              <Field\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Enter password\"\n                                className={`form-control ${props\n                                    .touched\n                                    .password &&\n                                    props\n                                      .errors\n                                      .password\n                                    ? \"is-invalid\"\n                                    : \"\"\n                                  }`}\n                              />\n                              <ErrorMessage\n                                component=\"div\"\n                                name=\"password\"\n                                className=\"invalid-feedback\"\n                              />\n                            </div>\n\n                            <button\n                              type=\"submit\"\n                              className=\"btn btn-primary btn-block mt-4\"\n                              disabled={\n                                props.isSubmitting\n                              }\n                            >\n                              {props.isSubmitting\n                                ? \"Submitting...\"\n                                : \"Submit\"}\n                            </button>\n                          </Form>\n                        </div>\n                      ) : (\n                        <h1>\n                          Home\n                          Page\n                        </h1>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmailValidator;\n\n\n/*\n\n    <fieldset>\n      <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n      <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n        autoComplete=\"on\" noValidate >\n\n        <div className=\"form-floating\">\n\n          <Field type=\"email\" className=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n            name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n            pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required />\n          <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n          <ErrorMessage name=\"floatingInputNewsletter\" component=\"div\" className='mt-2 position-absolute' />\n      {}\n        </div>\n\n        <button id=\"submitButton\" type=\"submit\" disabled={isSubmitting}>\n          <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n        </button>\n\n      </Form>\n\n    </fieldset>\n\n\n        <Form enctype=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autocomplete=\"on\" noValidate onSubmit={handleSubmit}>\n\n          <Form.Group className=\"form-floating\" controlId=\"newsletter\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              class=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\n              value={values.floatingInputNewsletter}\n              onChange={handleChange}\n              isValid={touched.floatingInputNewsletter && !errors.floatingInputNewsletter}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Button id=\"submitButton\" type=\"submit\"><img src=\"img/arrow-right.svg\" alt=\"Arrow right\" /></Button>\n        </Form>\n\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}