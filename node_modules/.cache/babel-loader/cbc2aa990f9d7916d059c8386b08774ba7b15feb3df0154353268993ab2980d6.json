{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js\";\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailValidator = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    floatingInputNewsletter: ''\n  },\n  validate: values => {\n    const errors = {};\n    if (!values.floatingInputNewsletter) {\n      errors.floatingInputNewsletter = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.floatingInputNewsletter)) {\n      errors.floatingInputNewsletter = 'Invalid email address';\n    }\n    return errors;\n  },\n  children: ({\n    isSubmitting\n  }) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"fs-6 text-center\",\n      children: \"Subscribe to our newsletter and receive a surprise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      action: \"#\",\n      encType: \"text/plain\",\n      id: \"newsletterForm\",\n      name: \"newsletterForm\",\n      autoComplete: \"on\",\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          className: \"form-control rounded-0 border-0\",\n          id: \"floatingInputNewsletter\",\n          name: \"floatingInputNewsletter\",\n          placeholder: \"name@example.com\",\n          pattern: \"[a-z0-9._%+\\\\-]+@[a-z0-9.\\\\-]+\\\\.[a-z]{2,}$\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"floatingInputNewsletter\",\n          id: \"floatingInputLabel\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"floatingInputNewsletter\",\n          component: \"div\",\n          className: \"mt-2 position-absolute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitButton\",\n        type: \"submit\",\n        disabled: isSubmitting ? true : false,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/arrow-right.svg\",\n          alt: \"Arrow right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = EmailValidator;\nexport default EmailValidator;\nvar _c;\n$RefreshReg$(_c, \"EmailValidator\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","ErrorMessage","jsxDEV","_jsxDEV","EmailValidator","initialValues","floatingInputNewsletter","validate","values","errors","test","children","isSubmitting","className","fileName","_jsxFileName","lineNumber","columnNumber","action","encType","id","name","autoComplete","noValidate","type","placeholder","pattern","required","for","component","disabled","src","alt","_c","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst EmailValidator = () => (\n\n  <Formik\n    initialValues={{ floatingInputNewsletter: '' }}\n    validate={values => {\n      const errors = {};\n      if (!values.floatingInputNewsletter) {\n        errors.floatingInputNewsletter = 'Required';\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.floatingInputNewsletter)\n      ) {\n        errors.floatingInputNewsletter = 'Invalid email address';\n      }\n      return errors;\n    }}\n  >\n    {({ isSubmitting }) => (\n\n      <fieldset>\n        <legend className=\"fs-6 text-center\">Subscribe to our newsletter and receive a surprise</legend>\n\n        <Form action='#' encType=\"text/plain\" id=\"newsletterForm\" name=\"newsletterForm\"\n          autoComplete=\"on\" noValidate >\n\n          <div className=\"form-floating\">\n\n            <Field type=\"email\" className=\"form-control rounded-0 border-0\" id=\"floatingInputNewsletter\"\n              name=\"floatingInputNewsletter\" placeholder=\"name@example.com\"\n              pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required />\n            <label for=\"floatingInputNewsletter\" id=\"floatingInputLabel\">Email address</label>\n\n            <ErrorMessage name=\"floatingInputNewsletter\" component=\"div\" className='mt-2 position-absolute' />\n\n          </div>\n\n          <button id=\"submitButton\" type=\"submit\" disabled={isSubmitting ? true : false}>\n            <img src=\"/img/arrow-right.svg\" alt=\"Arrow right\" />\n          </button>\n\n        </Form>\n\n      </fieldset>\n\n    )}\n  </Formik>\n\n);\n\nexport default EmailValidator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}