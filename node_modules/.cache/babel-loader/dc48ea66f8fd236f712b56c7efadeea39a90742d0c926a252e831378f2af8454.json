{"ast":null,"code":"var _jsxFileName = \"/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailValidator() {\n  const {\n    Formik\n  } = formik;\n  const schema = yup.object().shape({\n    email: yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: schema,\n    onSubmit: console.log,\n    initialValues: {\n      email: ''\n    },\n    children: ({\n      handleSubmit,\n      handleChange,\n      values,\n      touched,\n      errors\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"newsletter\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleChange,\n          isValid: touched.email && !errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = EmailValidator;\nexport default EmailValidator;\nvar _c;\n$RefreshReg$(_c, \"EmailValidator\");","map":{"version":3,"names":["Button","Form","formik","yup","jsxDEV","_jsxDEV","EmailValidator","Formik","schema","object","shape","email","string","required","validationSchema","onSubmit","console","log","initialValues","children","handleSubmit","handleChange","values","touched","errors","noValidate","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","name","value","onChange","isValid","Feedback","_c","$RefreshReg$"],"sources":["/Users/chiararebellato/Desktop/skinnaturals/src/features/shoppingCart/emailValidation/emailValidation.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\n\nfunction EmailValidator() {\n  const { Formik } = formik;\n\n  const schema = yup.object().shape({\n    email: yup.string().required()\n  });\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={console.log}\n      initialValues={{\n        email: ''\n      }}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n\n            <Form.Group controlId=\"newsletter\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isValid={touched.email && !errors.email}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n          <Button type=\"submit\">Submit form</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default EmailValidator;"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAChC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGL,MAAM;EAEzB,MAAMM,MAAM,GAAGL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAChCC,KAAK,EAAER,GAAG,CAACS,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;EAC/B,CAAC,CAAC;EAEF,oBACER,OAAA,CAACE,MAAM;IACLO,gBAAgB,EAAEN,MAAO;IACzBO,QAAQ,EAAEC,OAAO,CAACC,GAAI;IACtBC,aAAa,EAAE;MACbP,KAAK,EAAE;IACT,CAAE;IAAAQ,QAAA,EAEDA,CAAC;MAAEC,YAAY;MAAEC,YAAY;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAO,CAAC,kBACvDnB,OAAA,CAACJ,IAAI;MAACwB,UAAU;MAACV,QAAQ,EAAEK,YAAa;MAAAD,QAAA,gBAEpCd,OAAA,CAACJ,IAAI,CAACyB,KAAK;QAACC,SAAS,EAAC,YAAY;QAAAR,QAAA,gBAChCd,OAAA,CAACJ,IAAI,CAAC2B,KAAK;UAAAT,QAAA,EAAC;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACtC3B,OAAA,CAACJ,IAAI,CAACgC,OAAO;UACXC,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEd,MAAM,CAACX,KAAM;UACpB0B,QAAQ,EAAEhB,YAAa;UACvBiB,OAAO,EAAEf,OAAO,CAACZ,KAAK,IAAI,CAACa,MAAM,CAACb;QAAM;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACF3B,OAAA,CAACJ,IAAI,CAACgC,OAAO,CAACM,QAAQ;UAAApB,QAAA,EAAC;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACf3B,OAAA,CAACL,MAAM;QAACkC,IAAI,EAAC,QAAQ;QAAAf,QAAA,EAAC;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACQ,EAAA,GAlCQlC,cAAc;AAoCvB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}